<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonSVG1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAAHsAAAB7CAYAAABUx/9/AAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAAHYcAAB2HAY/l8WUAAAUxSURBVHhe7d29i1xVHMbx7WwWfEFZZpm33YUEbARFLMUQ
        SZ8iKSwkiFikSLCwsVAUgkgwvqRIxCRrEgWDRLQwr2zpPyAINv4NsdFSnwfu6Ow5Z2fO/d07zO+eeR74
        MiFxz517P26MS0jWNE3TNE3TNE3TNK3aaDR6Dr2s/m84HB6uHk/3hxt6HL21tbX1G/pHRf0F8GPV4+ru
        gDzCzfwR3JyK6za4oGvXTXBBmyP4S9Vj9D9BNwuP7/XqUfqeoJvXCWxBt5N77JrQv47H4/Mr0Oe417+D
        e5+ba+y60P1+//BgMOiVHO5xjHvdC+49K7fYgo5rAs1cYgs6rik0c4ct6Lg2oJkrbEHHtQXN3GALOq4m
        9CN0Ofi+fbnAFnRcXejhcHgUnUn82H8tHVvQcRZofpxrbEHHWaGZW2xBxzWBZi6xBR3XFJq5wxZ0XBvQ
        zBW2oOPagmZusAUd1yY0c4FdE5o3dQodLz3ca2vQDP/McrFrQqu4LGi2VGz8NPXYeDw+mbqwyiobmi0V
        e2dn53lgv4sL/R5eWM2tFjRbKjYu8Aawf8JFrocXVjOrDc2Wir29vf0OLsJfhHyB/pxcVM3MBM1cYOOz
        +wFef5y+sEoHsFMpyJy8fGbv4UIXpi+s0gHseAoyJzfY+Oy+hYvdxOv1qiuIvy32Q2MXce7XeJ2cx2/v
        omvoS/QRfvw9h91GSQxWBHYYMG7gzb2CnrCEs3ljP4fnVu2iF6u34Wp84HhvSQyGeysTG2/wSK/Xe8oS
        zjiLhD2VsJ1N2IZwhrCDhO1swjaEM4QdJGxnE7YhnCHsIGE7m7AN4QxhBwnb2YRtCGcIO0jYziZsQzhD
        2EHCdjZhG8IZwg4StrMJ2xDOEHaQsJ1N2IZwhrCDhO1swjaEM4QdJGxnE7YhnCHsIGE7m7AN4QxhBwnb
        2YRtCGcIO0jYziZsQzhD2EHCdjZhG8IZwg4StrMJ2xDOEHaQsJ1N2IZwhrCDhO1swjaEMw7ExnVvoCOb
        m5tPegsgb+I9JjGYsBPhjFmf2XfQLq5/0Vt44J/ivSUxmLCDNjY2nsYZbyOiJs/3Gh74VbwmMZiwpyI0
        Pu5ZfPw5dD91tucWiY2PX97f2Nc29gQaH/8+6txnNVsUNp7n+dR503UGuwRohgfO/1NIYjALdg40w7VH
        FU37awu7FGjWNnYuNNqrWBazNrBrQj/EuffRPY/h/d0Fdms/jePMXGiee6xiWcyaYteEfoAzb+L1Y7ym
        /hTjpYf39gEe+kygXGyclw2Nf8EW99/qyZpgG6Cv4p9/FR/3TOo8D62vr/NPVG78RRV30JwVu0Ro1ga2
        S2jOgl0qNGuK7Raaq4tdMjRrgu0amquDXTo0s2K7h+ZysVcBmlmwOwHN5WCvCjSri90ZaG4eNuJfVrYS
        0KwOdqeguTnY/ALIa2gloFkudueguVnY6Afc1C28rgQ0y8FGvOfU90e5gebmYOdUDDTLxM7KFTTXELso
        aNYWtjtorgF2cdCsDWyX0JwRu0ho1hTbLTRnxP4O2CfwcA71+/3tkgL0FjqNe0xizso1NGfBBvT36Ct8
        +1KJAY1/cXwS9KDcQ3MNf4FWZICb+duSwjoBzQk7rg52Z6A5YJ/BT8n8vVfJG1/FAPgNXpO403UKmsOb
        fgF9IvB93a4+u39BZUBPhjcv8HR38Eyu4JVfMn6Eug09GW5C4AfHrytcA/Jn6GT1yLo93BTBz6Fv1b4u
        APvEYDDoVY9K0zRN0zRN0zRN0zRN0zRN0zRN0zRNm7e1tX8BznGAIPgm5AIAAAAASUVORK5CYII=
</value>
  </data>
</root>