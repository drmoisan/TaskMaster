<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonSVG1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
        YII=
</value>
  </data>
</root>