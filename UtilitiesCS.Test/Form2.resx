<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonSVG1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        iVBORw0KGgoAAAANSUhEUgAAADsAAAA7CAYAAADFJfKzAAAAAXNSR0IArs4c6QAAAARnQU1BAACxjwv8
        YQUAAAAJcEhZcwAADsMAAA7DAcdvqGQAAAQySURBVGhD7Zm7TxRRGMU/SgsTVytKSvwDjFj4KIyARkJB
        Ae4KalRWYUaiFiSGYGNMbExU2FWiRGM0MSYURncXjI+K0pLSimgHfwGeb/decu/OncfO3pGBzElOZva+
        5vzm8TG70K7WxU85sbfHla8OwxuUr5wSLXtUDFqobdW954ELtdVt2D0PPPJtXwacAe82MdSF5R4qVIpU
        qE5rzi8/1GB3LXC96la/e2CiOF9bE6ukXKOVLgTWb89WvStg+XbNV/8YAVrzqlgxpRqpdtefN1PwfG0W
        fYP1k6Ga25vH81Ud/dIpVk2hBlY66iG10HXwS2KEV1yEmk9O6kFZ9UqrhsatzM+un2yBPi1Sbt6lnjjm
        uWKZ1pSv/daD45b1ky1QBO4sO7RWdmmrDT8uDVCHWDJc/OypwQu1RdHjVeN2bzoxMa+oBVDppcjAhcqU
        Hj7gqrIahaxRseM+o3wbGkK342jAhVpJgw16VqUYmKt03GLUDFtyaAnbB5Ht0GtsVdgttFWwnVbNxxGH
        bKhQq2yD8hVT9NylbjGvTzTZkQG2uHCTDrVizGNwHdjraXHIhjRY3JaKkGlYzuN90dy+bMCyMTcMOBYs
        m6+06GpPtmDZmB8EHBuWM4qu9mQTlj0/Qaexxjk8t324Ir3SCy4dfuvSfumhsTc9/aMfetkDY+9Oqn3I
        cVXNlFpYG+YMaqYkYcdxwIM7ac6gZspg42jHYG9Qzs8ZrA1lsEoofM7NO3QcfbP/yzjmR2y3M+HPWAlb
        7fWz2ZFePIJgXxXpQMmlGbU/rUbOX6FfQIJgy1N0RO1LuwF8X2CZFQjr0hO1L/XG93KBZZYf7IsreJNx
        aVPpW8fYokWP+7l0i26jTtzD/gx7ziV3Dm9V6hg28n1W8jHslMAyC5OMsJh4XWt36SWPteijfkaGwWcO
        XcN+/cQA9AyAj6lj2Mi1ruTbDP0tDJM8sFyYsP9Dbce4QR5r0Vpw1VFgAXdHzYc57wWSvzDRA2soTD95
        nGVrgKojwTq0omYsTVL4P7Uw0Qvr0COtzaW7PM6yNUDVYbBzk9Sv5gstTFKYrMNO0gQO9ldpW0fbCR5n
        2R5I6TBYZOKXjO3MoYVJCpM1WExc1j67VOYxCdgDKR0BVi1MG5F/pMdkHbbJuGXO8pgE7IGUDoKNVZik
        sIAvLBZa4f6EbARlB8LGKUxSWMAfNpnCJG0EZfvBxi5MUljMD5bfmEwhbdkIyvaDRaZ4hUkKi/nBJlWY
        pI2g7ADYeIVJCosZYRMsTNJGULYJlh8pNR/GRC9MUljMA4uFkixM0kZQthHWoa9axlYKkxQW88ImW5ik
        jaBsgJ0H4Cj2L7PxeUjL2GphksJifs9set1qYZIqT1CXccGUOlZhUoVF+Ecr4+Kps0MlETue+IcqnLFF
        LFRJs/HI2ftfbaZMmTJlypSEiP4BQmM0nDLOVRIAAAAASUVORK5CYII=
</value>
  </data>
</root>