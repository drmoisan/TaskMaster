<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="buttonSVG1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>