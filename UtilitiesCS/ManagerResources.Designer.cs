//------------------------------------------------------------------------------
// <auto-generated>
//     This code was generated by a tool.
//     Runtime Version:4.0.30319.42000
//
//     Changes to this file may cause incorrect behavior and will be lost if
//     the code is regenerated.
// </auto-generated>
//------------------------------------------------------------------------------

namespace UtilitiesCS {
    using System;
    
    
    /// <summary>
    ///   A strongly-typed resource class, for looking up localized strings, etc.
    /// </summary>
    // This class was auto-generated by the StronglyTypedResourceBuilder
    // class via a tool like ResGen or Visual Studio.
    // To add or remove a member, edit your .ResX file then rerun ResGen
    // with the /str option, or rebuild your VS project.
    [global::System.CodeDom.Compiler.GeneratedCodeAttribute("System.Resources.Tools.StronglyTypedResourceBuilder", "17.0.0.0")]
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute()]
    [global::System.Runtime.CompilerServices.CompilerGeneratedAttribute()]
    internal class ManagerResources {
        
        private static global::System.Resources.ResourceManager resourceMan;
        
        private static global::System.Globalization.CultureInfo resourceCulture;
        
        [global::System.Diagnostics.CodeAnalysis.SuppressMessageAttribute("Microsoft.Performance", "CA1811:AvoidUncalledPrivateCode")]
        internal ManagerResources() {
        }
        
        /// <summary>
        ///   Returns the cached ResourceManager instance used by this class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Resources.ResourceManager ResourceManager {
            get {
                if (object.ReferenceEquals(resourceMan, null)) {
                    global::System.Resources.ResourceManager temp = new global::System.Resources.ResourceManager("UtilitiesCS.ManagerResources", typeof(ManagerResources).Assembly);
                    resourceMan = temp;
                }
                return resourceMan;
            }
        }
        
        /// <summary>
        ///   Overrides the current thread's CurrentUICulture property for all
        ///   resource lookups using this strongly typed resource class.
        /// </summary>
        [global::System.ComponentModel.EditorBrowsableAttribute(global::System.ComponentModel.EditorBrowsableState.Advanced)]
        internal static global::System.Globalization.CultureInfo Culture {
            get {
                return resourceCulture;
            }
            set {
                resourceCulture = value;
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$id&quot;: &quot;1&quot;,
        ///  &quot;Engine&quot;: true,
        ///  &quot;Globals&quot;: &quot;default&quot;,
        ///  &quot;T&quot;: &quot;UtilitiesCS.EmailIntelligence.ClassifierGroups.ActionableClassifierGroup, UtilitiesCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot;,
        ///  &quot;Name&quot;: &quot;Actionable&quot;,
        ///  &quot;Config&quot;: {
        ///    &quot;$id&quot;: &quot;2&quot;,
        ///    &quot;Disk&quot;: {
        ///      &quot;FileName&quot;: &quot;ManagerActionable.json&quot;,
        ///      &quot;RelativePath&quot;: &quot;&quot;,
        ///      &quot;SpecialFolderName&quot;: &quot;Flow&quot;
        ///    },
        ///    &quot;LocalDisk&quot;: {
        ///      &quot;FileName&quot;: &quot;ManagerActionable.json&quot;,
        ///      &quot;RelativePath&quot;: &quot;&quot;,
        ///      &quot;SpecialFolde [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Actionable {
            get {
                return ResourceManager.GetString("Actionable", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$id&quot;: &quot;1&quot;,
        ///  &quot;Engine&quot;: false,
        ///  &quot;Globals&quot;: &quot;default&quot;,
        ///  &quot;Name&quot;: &quot;Context&quot;,
        ///  &quot;T&quot;: null,
        ///  &quot;Config&quot;: {
        ///    &quot;$id&quot;: &quot;2&quot;,
        ///    &quot;Disk&quot;: {
        ///      &quot;FileName&quot;: &quot;ManagerContext.json&quot;,
        ///      &quot;RelativePath&quot;: &quot;&quot;,
        ///      &quot;SpecialFolderName&quot;: &quot;AppData&quot;
        ///    },
        ///    &quot;LocalDisk&quot;: {
        ///      &quot;FileName&quot;: &quot;ManagerContext.json&quot;,
        ///      &quot;RelativePath&quot;: &quot;&quot;,
        ///      &quot;SpecialFolderName&quot;: &quot;AppData&quot;
        ///    },
        ///    &quot;NetDisk&quot;: {
        ///      &quot;FileName&quot;: &quot;ManagerContext.json&quot;,
        ///      &quot;RelativePath&quot;: &quot;&quot;,
        ///      &quot;SpecialFolderName&quot;: &quot;F [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Context {
            get {
                return ResourceManager.GetString("Context", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$id&quot;: &quot;1&quot;,
        ///  &quot;Engine&quot;: false,
        ///  &quot;Globals&quot;: &quot;default&quot;,
        ///  &quot;Name&quot;: &quot;Folder&quot;,
        ///  &quot;T&quot;: null,
        ///  &quot;Config&quot;: {
        ///    &quot;$id&quot;: &quot;2&quot;,
        ///    &quot;Disk&quot;: {
        ///      &quot;FileName&quot;: &quot;ManagerFolder.json&quot;,
        ///      &quot;RelativePath&quot;: &quot;&quot;,
        ///      &quot;SpecialFolderName&quot;: &quot;AppData&quot;
        ///    },
        ///    &quot;LocalDisk&quot;: {
        ///      &quot;FileName&quot;: &quot;ManagerFolder.json&quot;,
        ///      &quot;RelativePath&quot;: &quot;&quot;,
        ///      &quot;SpecialFolderName&quot;: &quot;AppData&quot;
        ///    },
        ///    &quot;NetDisk&quot;: {
        ///      &quot;FileName&quot;: &quot;ManagerFolder.json&quot;,
        ///      &quot;RelativePath&quot;: &quot;&quot;,
        ///      &quot;SpecialFolderName&quot;: &quot;Flow&quot; [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Folder {
            get {
                return ResourceManager.GetString("Folder", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$id&quot;: &quot;1&quot;,
        ///  &quot;Engine&quot;: false,
        ///  &quot;Globals&quot;: &quot;default&quot;,
        ///  &quot;Name&quot;: &quot;Project&quot;,
        ///  &quot;T&quot;: null,
        ///  &quot;Config&quot;: {
        ///    &quot;$id&quot;: &quot;2&quot;,
        ///    &quot;Disk&quot;: {
        ///      &quot;FileName&quot;: &quot;ManagerProject.json&quot;,
        ///      &quot;RelativePath&quot;: &quot;&quot;,
        ///      &quot;SpecialFolderName&quot;: &quot;AppData&quot;
        ///    },
        ///    &quot;LocalDisk&quot;: {
        ///      &quot;FileName&quot;: &quot;ManagerProject.json&quot;,
        ///      &quot;RelativePath&quot;: &quot;&quot;,
        ///      &quot;SpecialFolderName&quot;: &quot;AppData&quot;
        ///    },
        ///    &quot;NetDisk&quot;: {
        ///      &quot;FileName&quot;: &quot;ManagerProject.json&quot;,
        ///      &quot;RelativePath&quot;: &quot;&quot;,
        ///      &quot;SpecialFolderName&quot;: &quot;F [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Project {
            get {
                return ResourceManager.GetString("Project", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$id&quot;: &quot;1&quot;,
        ///  &quot;Engine&quot;:true,
        ///  &quot;Globals&quot;: &quot;default&quot;,
        ///  &quot;T&quot;: &quot;UtilitiesCS.EmailIntelligence.SpamBayes, UtilitiesCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot;,
        ///  &quot;Name&quot;: &quot;Spam&quot;,
        ///  &quot;Config&quot;: {
        ///    &quot;$id&quot;: &quot;2&quot;,
        ///    &quot;Disk&quot;: {
        ///      &quot;FileName&quot;: &quot;ManagerSpam.json&quot;,
        ///      &quot;RelativePath&quot;: &quot;&quot;,
        ///      &quot;SpecialFolderName&quot;: &quot;AppData&quot;
        ///    },
        ///    &quot;LocalDisk&quot;: {
        ///      &quot;FileName&quot;: &quot;ManagerSpam.json&quot;,
        ///      &quot;RelativePath&quot;: &quot;&quot;,
        ///      &quot;SpecialFolderName&quot;: &quot;AppData&quot;
        ///    },
        ///    &quot;NetDisk&quot;: {
        ///     [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Spam {
            get {
                return ResourceManager.GetString("Spam", resourceCulture);
            }
        }
        
        /// <summary>
        ///   Looks up a localized string similar to {
        ///  &quot;$id&quot;: &quot;1&quot;,
        ///  &quot;Engine&quot;: true,
        ///  &quot;Globals&quot;: &quot;default&quot;,
        ///  &quot;T&quot;: &quot;UtilitiesCS.EmailIntelligence.Triage, UtilitiesCS, Version=1.0.0.0, Culture=neutral, PublicKeyToken=null&quot;,
        ///  &quot;Name&quot;: &quot;Triage&quot;,
        ///  &quot;Config&quot;: {
        ///    &quot;$id&quot;: &quot;2&quot;,
        ///    &quot;Disk&quot;: {
        ///      &quot;FileName&quot;: &quot;ManagerTriage.json&quot;,
        ///      &quot;RelativePath&quot;: &quot;&quot;,
        ///      &quot;SpecialFolderName&quot;: &quot;Flow&quot;
        ///    },
        ///    &quot;LocalDisk&quot;: {
        ///      &quot;FileName&quot;: &quot;ManagerTriage.json&quot;,
        ///      &quot;RelativePath&quot;: &quot;&quot;,
        ///      &quot;SpecialFolderName&quot;: &quot;AppData&quot;
        ///    },
        ///    &quot;NetDisk&quot;: {
        ///    [rest of string was truncated]&quot;;.
        /// </summary>
        internal static string Triage {
            get {
                return ResourceManager.GetString("Triage", resourceCulture);
            }
        }
    }
}
