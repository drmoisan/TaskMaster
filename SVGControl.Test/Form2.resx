<?xml version="1.0" encoding="utf-8"?>
<root>
  <!-- 
    Microsoft ResX Schema 
    
    Version 2.0
    
    The primary goals of this format is to allow a simple XML format 
    that is mostly human readable. The generation and parsing of the 
    various data types are done through the TypeConverter classes 
    associated with the data types.
    
    Example:
    
    ... ado.net/XML headers & schema ...
    <resheader name="resmimetype">text/microsoft-resx</resheader>
    <resheader name="version">2.0</resheader>
    <resheader name="reader">System.Resources.ResXResourceReader, System.Windows.Forms, ...</resheader>
    <resheader name="writer">System.Resources.ResXResourceWriter, System.Windows.Forms, ...</resheader>
    <data name="Name1"><value>this is my long string</value><comment>this is a comment</comment></data>
    <data name="Color1" type="System.Drawing.Color, System.Drawing">Blue</data>
    <data name="Bitmap1" mimetype="application/x-microsoft.net.object.binary.base64">
        <value>[base64 mime encoded serialized .NET Framework object]</value>
    </data>
    <data name="Icon1" type="System.Drawing.Icon, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
        <value>[base64 mime encoded string representing a byte array form of the .NET Framework object]</value>
        <comment>This is a comment</comment>
    </data>
                
    There are any number of "resheader" rows that contain simple 
    name/value pairs.
    
    Each data row contains a name, and value. The row also contains a 
    type or mimetype. Type corresponds to a .NET class that support 
    text/value conversion through the TypeConverter architecture. 
    Classes that don't support this are serialized and stored with the 
    mimetype set.
    
    The mimetype is used for serialized objects, and tells the 
    ResXResourceReader how to depersist the object. This is currently not 
    extensible. For a given mimetype the value must be set accordingly:
    
    Note - application/x-microsoft.net.object.binary.base64 is the format 
    that the ResXResourceWriter will generate, however the reader can 
    read any of the formats listed below.
    
    mimetype: application/x-microsoft.net.object.binary.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Binary.BinaryFormatter
            : and then encoded with base64 encoding.
    
    mimetype: application/x-microsoft.net.object.soap.base64
    value   : The object must be serialized with 
            : System.Runtime.Serialization.Formatters.Soap.SoapFormatter
            : and then encoded with base64 encoding.

    mimetype: application/x-microsoft.net.object.bytearray.base64
    value   : The object must be serialized into a byte array 
            : using a System.ComponentModel.TypeConverter
            : and then encoded with base64 encoding.
    -->
  <xsd:schema id="root" xmlns="" xmlns:xsd="http://www.w3.org/2001/XMLSchema" xmlns:msdata="urn:schemas-microsoft-com:xml-msdata">
    <xsd:import namespace="http://www.w3.org/XML/1998/namespace" />
    <xsd:element name="root" msdata:IsDataSet="true">
      <xsd:complexType>
        <xsd:choice maxOccurs="unbounded">
          <xsd:element name="metadata">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" />
              </xsd:sequence>
              <xsd:attribute name="name" use="required" type="xsd:string" />
              <xsd:attribute name="type" type="xsd:string" />
              <xsd:attribute name="mimetype" type="xsd:string" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="assembly">
            <xsd:complexType>
              <xsd:attribute name="alias" type="xsd:string" />
              <xsd:attribute name="name" type="xsd:string" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="data">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
                <xsd:element name="comment" type="xsd:string" minOccurs="0" msdata:Ordinal="2" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" msdata:Ordinal="1" />
              <xsd:attribute name="type" type="xsd:string" msdata:Ordinal="3" />
              <xsd:attribute name="mimetype" type="xsd:string" msdata:Ordinal="4" />
              <xsd:attribute ref="xml:space" />
            </xsd:complexType>
          </xsd:element>
          <xsd:element name="resheader">
            <xsd:complexType>
              <xsd:sequence>
                <xsd:element name="value" type="xsd:string" minOccurs="0" msdata:Ordinal="1" />
              </xsd:sequence>
              <xsd:attribute name="name" type="xsd:string" use="required" />
            </xsd:complexType>
          </xsd:element>
        </xsd:choice>
      </xsd:complexType>
    </xsd:element>
  </xsd:schema>
  <resheader name="resmimetype">
    <value>text/microsoft-resx</value>
  </resheader>
  <resheader name="version">
    <value>2.0</value>
  </resheader>
  <resheader name="reader">
    <value>System.Resources.ResXResourceReader, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <resheader name="writer">
    <value>System.Resources.ResXResourceWriter, System.Windows.Forms, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b77a5c561934e089</value>
  </resheader>
  <assembly alias="System.Drawing" name="System.Drawing, Version=4.0.0.0, Culture=neutral, PublicKeyToken=b03f5f7f11d50a3a" />
  <data name="pictureBoxSVG1.Image" type="System.Drawing.Bitmap, System.Drawing" mimetype="application/x-microsoft.net.object.bytearray.base64">
    <value>
        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
</value>
  </data>
</root>